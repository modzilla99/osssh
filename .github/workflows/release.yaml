name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22.3'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ./.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy

      - name: Build for Linux (amd64)
        run: GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-w -s" -o dist/osssh-linux-amd64 cmd/osssh/osssh.go

      - name: Build for Linux (aarch64)
        run: GOOS=linux GOARCH=arm64 CGO_ENABLED=0 go build -ldflags "-w -s" -o dist/osssh-linux-arm64 cmd/osssh/osssh.go

      - name: Build for macOS (amd64)
        run: GOOS=darwin GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-w -s" -o dist/osssh-darwin-amd64 cmd/osssh/osssh.go

      - name: Build for macOS (aarch64)
        run: GOOS=darwin GOARCH=arm64 CGO_ENABLED=0 go build -ldflags "-w -s" -o dist/osssh-darwin-arm64 cmd/osssh/osssh.go

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux Binary (amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/osssh-linux-amd64
          asset_name: osssh-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux Binary (aarch64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/osssh-linux-arm64
          asset_name: osssh-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload macOS Binary (amd64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/osssh-darwin-amd64
          asset_name: osssh-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload macOS Binary (aarch64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/osssh-darwin-arm64
          asset_name: osssh-darwin-arm64
          asset_content_type: application/octet-stream
